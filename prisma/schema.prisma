generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Books {
  BookID             Int        @id @default(autoincrement())
  Title              String?    @db.VarChar(255)
  Author             String?    @db.VarChar(50)
  PublicationDate    DateTime?  @db.Date
  PublishingHouse    String?    @db.VarChar(50)
  ISBN               String?    @db.VarChar(255)
  Price              String?    @db.VarChar(50)
  CategoryID         Int
  AvailabilityStatus String?    @db.VarChar(50)
  Location           String?    @db.VarChar(100)
  ImgUrl             String?    @db.VarChar(255)
  Introduction       String?    @db.VarChar(255)
  Categories         Categories @relation(fields: [CategoryID], references: [CategoryID], onDelete: NoAction, onUpdate: NoAction, map: "Books_ibfk_1")
  Borrows            Borrows[]

  @@index([CategoryID], map: "CategoryID")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Categories {
  CategoryID   Int     @id @default(autoincrement())
  CategoryName String  @db.VarChar(100)
  CategoryChar String? @db.Char(1)
  Books        Books[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Notices {
  NoticeID     Int      @id @default(autoincrement())
  Title        String   @db.VarChar(100)
  Content      String   @db.Text
  CreationDate DateTime @db.Date
  UserID       Int
  Users        Users    @relation(fields: [UserID], references: [UserID], onDelete: NoAction, onUpdate: NoAction, map: "Notices_ibfk_1")

  @@index([UserID], map: "UserID")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Readers {
  ReaderID Int       @id @default(autoincrement())
  Name     String?   @db.VarChar(100)
  Phone    String?   @db.VarChar(11)
  Password String?   @db.VarChar(255)
  Email    String?   @db.VarChar(255)
  Borrows  Borrows[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Users {
  UserID   Int       @id @default(autoincrement())
  Username String?   @db.VarChar(100)
  Password String?   @db.VarChar(255)
  UserType String?   @db.VarChar(50)
  Notices  Notices[]
}

model Borrows {
  BorrowID   Int       @id @default(autoincrement())
  BookID     Int
  ReaderID   Int
  BorrowDate DateTime  @db.Date
  ReturnDate DateTime? @db.Date
  IsOverdue  Boolean
  Books      Books     @relation(fields: [BookID], references: [BookID], onDelete: NoAction, onUpdate: NoAction, map: "Borrows_ibfk_1")
  Readers    Readers   @relation(fields: [ReaderID], references: [ReaderID], onDelete: NoAction, onUpdate: NoAction, map: "Borrows_ibfk_2")
  Fines      Fines[]

  @@index([BookID], map: "BookID")
  @@index([ReaderID], map: "ReaderID")
}

model Fines {
  FineID     Int      @id @default(autoincrement())
  BorrowID   Int?
  FineAmount Decimal? @db.Decimal(10, 2)
  IsPaid     Boolean?
  Borrows    Borrows? @relation(fields: [BorrowID], references: [BorrowID], onDelete: NoAction, onUpdate: NoAction, map: "Fines_ibfk_1")

  @@index([BorrowID], map: "BorrowID")
}
